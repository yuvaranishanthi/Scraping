# -*- coding: utf-8 -*-
"""YTscrap_Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SLkEc9JBmT6e0NzgWyWJLfxArYuJdIOm
"""

import pkg_resources

#to check the version of installed google-api-python-client pacage
version=pkg_resources.get_distribution("google-api-python-client").version
print(f"google-api-python-client : {version}")

#to verify the installation
!pip show google-api-python-client
!pip  install unidecode

#install required package
!pip install google-api-python-client
#import corrected module
from googleapiclient.discovery import build

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Set up the YouTube API
api_key = 'AIzaSyDaX4yQBIVsHBBWyNUbG1pvHSi00MURLBo' # Replace with your actual API key
youtube = build('youtube', 'v3', developerKey=api_key)

# List of YouTube channel IDs
channel_ids = [
        # Mathematics
           'UCYO_jab_esuFRV4b17AJtAw',
           'UCoxcjq-8xIDTYp3uz647V5A',
           'UC4a-Gbdw7vOaccHmFo40b9g',
           'UCFe6jenM1Bc54qtBsIJGRZQ',
           'UCr22xikWUK2yUW4YxOKXclQ',
           'UC1_uAIS3r8Vu6JjXWvastJg',
           'UCoHhuummRZaIVX7bD4t2czg',
          'UCOGeU-1Fig3rrDjhm9Zs_wg',
          'UCSju5G2aFaWMqn-_0YBtq5A',
          'UCq0EGvLTyy-LLT1oUSO_0FQ',
          'UCyp1gCHZJU_fGWFf2rtMkCg',
          'UCpR62MSOeBQVXub13xwZ8aA',
          'UCEWpbFLzoYGPfuWUMFPSaoA',
          'UC9rTsvTxJnx1DNrDA3Rqa6A',
          'UCpCSAcbqs-sjEVfk_hMfY9w'

    ]

# Function to get YouTube channel statistics

def get_channel_stats(youtube, channel_id):
   # try:
        request = youtube.channels().list(
            part="snippet,contentDetails,statistics",
            id=channel_id
        )
        response = request.execute()

        if 'items' not in response or len(response['items']) == 0:
            print(f"Channel ID {channel_id} returned no results.")
            return None

        data = dict(
            Channel_name=response['items'][0]['snippet']['title'],
            Subscribers=int(response['items'][0]['statistics']['subscriberCount']),
            Views=int(response['items'][0]['statistics']['viewCount']),
            Total_videos=int(response['items'][0]['statistics']['videoCount']),
            Channel_id=channel_id
        )

        return data

        #if you need use if optional
    # except Exception as e:
    #     print(f"Error for Channel ID {channel_id}: {e}")
    #     return None

channel_data = [get_channel_stats(youtube, id) for id in channel_ids]
channel_data = [data for data in channel_data if data is not None]

# Convert to Pandas DataFrame
df = pd.DataFrame(channel_data)
print(df)

# # Set figure size for plots
import seaborn as sns
import matplotlib.pyplot as plt
sns.set(rc={'figure.figsize':(34, 15)})

# Plot bar charts
sns.barplot(x='Channel_name', y='Subscribers', data=df)

sns.barplot(x='Channel_name', y='Views', data=df)

sns.barplot(x='Channel_name', y='Total_videos', data=df)

# Save DataFrame to an Excel file
file_name = "youtube_channel_stats.xlsx"
df.to_excel(file_name, index=False)

# Uncomment below lines if running in Google Colab to download the file
from google.colab import files
files.download(file_name)