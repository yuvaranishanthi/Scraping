# -*- coding: utf-8 -*-
"""stuperform.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xJKOh1F5UDwcHvm6GksniXV6AWTNwF1I
"""

import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn import metrics
from sklearn.metrics import accuracy_score, classification_report
from sklearn.ensemble import RandomForestRegressor

from google.colab import files
uploaded=files.upload()

df=pd.read_csv('Student_Performance.csv')
print(df.head())

df.isnull().sum()

x=df.drop('Performance Index',axis=1)
y=df['Performance Index']

sns.boxplot(data=df[['Hours Studied', 'Previous Scores','Extracurricular Activities','Sample Question Papers Practiced', 'Performance Index']])

label_encoder = LabelEncoder()
x['Extracurricular Activities'] = label_encoder.fit_transform(df['Extracurricular Activities'])
print(x)

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=32)

scaler=StandardScaler()
X_train_scaled=scaler.fit_transform(x_train)
X_test_scaled=scaler.transform(x_test)

model=RandomForestRegressor()
model.fit(X_train_scaled,y_train)

y_pred=model.predict(X_test_scaled)

comparison_df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
print(comparison_df.head(10))

models = {}
models["Random Forest"] = model
rf_model = models["Random Forest"]
feature_importances = pd.Series(rf_model.feature_importances_, index=x.columns)
plt.figure(figsize=(10, 6))
feature_importances.sort_values().plot(kind='barh', color='skyblue')
plt.title("Feature Importance (Random Forest)")
plt.xlabel("Importance Score")
plt.tight_layout()
plt.show()

